#include <iostream>
#include <GL/glut.h>

void sky(){

	glBegin(GL_POLYGON); //Sky 
	glColor3f(0.0, 0.0, 0.0);

	glVertex2i(0, 1500);
	glVertex2i(2000, 1500);
	glColor3f(0.7, 0.7, 1.0);
	glVertex2i(2000, 0);
	glVertex2i(0, 0);
	glEnd();
}

void house(){

	///building
	glBegin(GL_QUADS);
	glColor3f(0.1, 0.1, 0.1);
	glVertex2f(100, 500);
	glVertex2f(400, 500);
	glColor3f(0.3, 0.3, 0.3);
	glVertex2f(400, 1000);
	glVertex2f(100, 1000);
	glEnd();

	glBegin(GL_QUADS);//side
	glColor3f(0.2, 0.4, 0.1);
	glVertex2f(400, 500);
	glVertex2f(450, 600);
	glColor3f(0.5, 0.5, 0.5);
	glVertex2f(450, 1050);
	glVertex2f(400, 1000);
	glEnd();

	glBegin(GL_QUADS);//roof
	glColor3f(0.2, 0.2, 0.1);
	glVertex2f(100, 1000);
	glVertex2f(400, 1000);
	glColor3f(0.5, 0.5, 0.5);
	glVertex2f(450, 1050);
	glVertex2f(150, 1050);
	glEnd();


	//window building
	glBegin(GL_QUADS);
	glColor3f(0.0, 0.0, 0.0);
	glVertex2f(150, 600);
	glVertex2f(200, 600);
	glColor3f(0.0, 0.0, 0.0);
	glVertex2f(200, 660);
	glVertex2f(150, 660);
	glEnd();

	// window building
	glBegin(GL_QUADS);
	glColor3f(0.0, 0.0, 0.0);
	glVertex2f(150, 750);
	glVertex2f(200, 750);
	glColor3f(0.0, 0.0, 0.0);
	glVertex2f(200, 810);
	glVertex2f(150, 810);
	glEnd();

	glBegin(GL_QUADS);//window
	glColor3f(0.0, 0.0, 0.0);
	glVertex2f(150, 900);
	glVertex2f(200, 900);
	glColor3f(0.0, 0.0, 0.0);
	glVertex2f(200, 960);
	glVertex2f(150, 960);
	glEnd();

	glBegin(GL_QUADS);//window
	glColor3f(0.0, 0.0, 0.0);
	glVertex2f(300, 900);
	glVertex2f(350, 900);
	glColor3f(0.0, 0.0, 0.0);
	glVertex2f(350, 960);
	glVertex2f(300, 960);
	glEnd();

	glBegin(GL_QUADS);//window
	glColor3f(0.0, 0.0, 0.0);
	glVertex2f(300, 750);
	glVertex2f(350, 750);
	glColor3f(0.0, 0.0, 0.0);
	glVertex2f(350, 810);
	glVertex2f(300, 810);
	glEnd();


	// window 
	glBegin(GL_QUADS);
	glColor3f(0.0, 0.0, 0.0);
	glVertex2f(300, 600);
	glVertex2f(350, 600);
	glColor3f(0.0, 0.0, 0.0);
	glVertex2f(350, 660);
	glVertex2f(300, 660);
	glEnd();




	// door building
	glBegin(GL_QUADS);
	glColor3f(0.0, 0.0, 0.0);
	glVertex2f(220, 500);
	glVertex2f(280, 500);

	glVertex2f(280, 570);
	glVertex2f(220, 570);
	glEnd();




}
void road(){



	//ground
	glBegin(GL_POLYGON);
	glColor3f(0.4, 0.5, .1);
	glVertex2i(0, 0);
	glVertex2i(2000, 0);
	glVertex2i(2000, 700);
	glVertex2i(0, 700);
	glEnd();
	//road
	glBegin(GL_POLYGON);
	glColor3f(0.4, 0.7, .4);
	glVertex2i(0, 0);
	glVertex2i(2000, 0);
	glVertex2i(2000, 430);
	glVertex2i(0, 430);
	glEnd();

	//sidebar1
	glBegin(GL_POLYGON);
	glColor3f(1.0, 1.0, 1.0);
	glVertex2i(0, 0);
	glVertex2i(2000, 0);
	glVertex2i(2000, 20);
	glVertex2i(0, 20);
	glEnd();

	//sidebar2
	glBegin(GL_POLYGON);
	glColor3f(1.0, 1.0, 1.0);
	glVertex2i(0, 410);
	glVertex2i(2000, 410);
	glVertex2i(2000, 430);
	glVertex2i(0, 430);
	glEnd();
	//border1
	glBegin(GL_POLYGON);
	glColor3f(1.0, 1.0, 1.0);
	glVertex2i(100, 200);
	glVertex2i(300, 200);
	glVertex2i(300, 230);
	glVertex2i(100, 230);
	glEnd();
	//border2
	glBegin(GL_POLYGON);
	glColor3f(1.0, 1.0, 1.0);
	glVertex2i(600, 200);
	glVertex2i(800, 200);
	glVertex2i(800, 230);
	glVertex2i(600, 230);
	glEnd();


	//border3
	glBegin(GL_POLYGON);
	glColor3f(1.0, 1.0, 1.0);
	glVertex2i(1100, 200);
	glVertex2i(1300, 200);
	glVertex2i(1300, 230);
	glVertex2i(1100, 230);
	glEnd();

	//border4
	glBegin(GL_POLYGON);
	glColor3f(1.0, 1.0, 1.0);
	glVertex2i(1600, 200);
	glVertex2i(1800, 200);
	glVertex2i(1800, 230);
	glVertex2i(1600, 230);
	glEnd();


}
void car1(){

	//box2
	glBegin(GL_POLYGON);
	glColor3f(0.1, 0.2, 0.1);
	glVertex2i(20, 220);
	glVertex2i(80, 220);
	glVertex2i(80, 270);
	glVertex2i(20, 270);
	glEnd();
	glEnd();
	//box1
	glBegin(GL_POLYGON);
	glColor3f(0.0, 0.0, 0.0);
	glVertex2i(0, 150);
	glVertex2i(100, 150);
	glVertex2i(100, 220);
	glVertex2i(0, 220);
	glEnd();

	//tier1
	glBegin(GL_POLYGON);
	glColor3f(0.3, 0.3, 0.3);
	glVertex2i(10, 130);
	glVertex2i(30, 130);
	glVertex2i(30, 150);
	glVertex2i(10, 150);
	glEnd();

	//tier2
	glBegin(GL_POLYGON);
	glColor3f(0.3, 0.3, 0.3);
	glVertex2i(60, 130);
	glVertex2i(80, 130);
	glVertex2i(80, 150);
	glVertex2i(60, 150);
	glEnd();

}
void car2(){


	//box1
	glBegin(GL_POLYGON);
	glColor3f(0.0, 0.0, 0.0);
	glVertex2i(120, 280);
	glVertex2i(220, 280);
	glVertex2i(220, 350);
	glVertex2i(120, 350);
	glEnd();

	//box2
	glBegin(GL_POLYGON);
	glColor3f(0.1, 0.2, 0.1);
	glVertex2i(140, 350);
	glVertex2i(200, 350);
	glVertex2i(200, 400);
	glVertex2i(140, 400);
	glEnd();

	//tier1
	glBegin(GL_POLYGON);
	glColor3f(0.3, 0.3, 0.3);
	glVertex2i(130, 260);
	glVertex2i(150, 260);
	glVertex2i(150, 280);
	glVertex2i(130, 280);
	glEnd();


	//tier2
	glBegin(GL_POLYGON);
	glColor3f(0.3, 0.3, 0.3);
	glVertex2i(180, 260);
	glVertex2i(200, 260);
	glVertex2i(200, 280);
	glVertex2i(180, 280);
	glEnd();


}
void tree(){

	//tree  0
	glBegin(GL_POLYGON); // tree stand
	glColor3f(0.4, 0.3, 0.0);
	glVertex2i(530, 450);
	glVertex2i(560, 450);
	glVertex2i(560, 650);
	glVertex2i(530, 650);
	glEnd();


	glBegin(GL_POLYGON); //tree triangle 1
	glColor3f(0.0, 0.2, 0.1);
	glVertex2i(460, 550);
	glVertex2i(640, 550);
	glVertex2i(540, 750);
	glEnd();




	glBegin(GL_POLYGON); //tree triangle 2
	glColor3f(0.0, 0.2, 0.1);
	glVertex2i(460, 600);
	glVertex2i(640, 600);
	glVertex2i(540, 800);
	glEnd();

	
	glBegin(GL_POLYGON); //tree triangle 3
	glColor3f(0.0, 0.2, 0.1);
	glVertex2i(460, 650);
	glVertex2i(640, 650);
	glVertex2i(540, 850);
	glEnd();


	//tree1
	glBegin(GL_POLYGON);
	glColor3f(0.4, 0.3, 0.0);
	glVertex2i(1150, 450);
	glVertex2i(1180, 450);
	glVertex2i(1180, 650);
	glVertex2i(1150, 650);
	glEnd();


	glBegin(GL_POLYGON);
	glColor3f(0.0, 0.2, 0.1);
	glVertex2i(1080, 550);
	glVertex2i(1260, 550);
	glVertex2i(1160, 750);
	glEnd();




	glBegin(GL_POLYGON);
	glColor3f(0.0, 0.2, 0.1);
	glVertex2i(1080, 600);
	glVertex2i(1260, 600);
	glVertex2i(1160, 800);
	glEnd();

	glBegin(GL_POLYGON);
	glColor3f(0.0, 0.2, 0.1);
	glVertex2i(1080, 650);
	glVertex2i(1260, 650);
	glVertex2i(1160, 850);
	glEnd();
	
}

void myDisplay(void)
{
	sky();
	road();
	car1();
	car2();
	house();
	tree();

	glFlush();
	glutPostRedisplay();
	glutSwapBuffers();
}

void myInit(void)
{
	glClearColor(0.0, 0.0, 1.0, 0.0);
	glColor3f(1.0f, 1.0f, 1.0f);
	glPointSize(0.0);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	gluOrtho2D(0.0, 2000.0, 0.0, 1500.0);
}

void main(int argc, char** argv)
{
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
	glutInitWindowSize(2000, 1500);
	glutInitWindowPosition(0, 0);

	glutCreateWindow("finalproject");
	glutDisplayFunc(myDisplay);

	myInit();
	glutMainLoop();
}